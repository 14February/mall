<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.backstage.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.backstage.goodsbean.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="gallery" jdbcType="VARCHAR" property="gallery" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="brief" jdbcType="VARCHAR" property="brief" />
    <result column="is_on_sale" jdbcType="BIT" property="isOnSale" />
    <result column="sort_order" jdbcType="SMALLINT" property="sortOrder" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="share_url" jdbcType="VARCHAR" property="shareUrl" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="counter_price" jdbcType="DECIMAL" property="counterPrice" />
    <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cskaoyan.bean.backstage.goodsbean.Goods">
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_sn, name, category_id, brand_id, gallery, keywords, brief, is_on_sale,
    sort_order, pic_url, share_url, is_new, is_hot, unit, counter_price, retail_price,
    add_time, update_time, deleted
  </sql>
  <sql id="Blob_Column_List">
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cskaoyan.bean.backstage.goodsbean.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cskaoyanmall_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cskaoyan.bean.backstage.goodsbean.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cskaoyanmall_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cskaoyanmall_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cskaoyanmall_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cskaoyan.bean.backstage.goodsbean.GoodsExample">
    delete from cskaoyanmall_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.bean.backstage.goodsbean.Goods">
  <selectKey order="AFTER" keyProperty="id" keyColumn="goodsid" resultType="int">
    select LAST_INSERT_ID() as goodsid
  </selectKey>
    insert into cskaoyanmall_goods (id, goods_sn, name, 
      category_id, brand_id, gallery, 
      keywords, brief, is_on_sale, 
      sort_order, pic_url, share_url, 
      is_new, is_hot, unit, counter_price, 
      retail_price, add_time, update_time, 
      deleted, detail)
    values (#{id,jdbcType=INTEGER}, #{goodsSn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, #{gallery,jdbcType=VARCHAR}, 
      #{keywords,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, #{isOnSale,jdbcType=BIT}, 
      #{sortOrder,jdbcType=SMALLINT}, #{picUrl,jdbcType=VARCHAR}, #{shareUrl,jdbcType=VARCHAR}, 
      #{isNew,jdbcType=BIT}, #{isHot,jdbcType=BIT}, #{unit,jdbcType=VARCHAR}, #{counterPrice,jdbcType=DECIMAL}, 
      #{retailPrice,jdbcType=DECIMAL}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.backstage.goodsbean.Goods">
    insert into cskaoyanmall_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsSn != null">
        goods_sn,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="gallery != null">
        gallery,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="brief != null">
        brief,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="shareUrl != null">
        share_url,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="counterPrice != null">
        counter_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsSn != null">
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="gallery != null">
        #{gallery,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="brief != null">
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="isOnSale != null">
        #{isOnSale,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="shareUrl != null">
        #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=BIT},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="counterPrice != null">
        #{counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan.bean.backstage.goodsbean.GoodsExample" resultType="java.lang.Long">
    select count(*) from cskaoyanmall_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cskaoyanmall_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSn != null">
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.gallery != null">
        gallery = #{record.gallery,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null">
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnSale != null">
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.shareUrl != null">
        share_url = #{record.shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=BIT},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.counterPrice != null">
        counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.retailPrice != null">
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cskaoyanmall_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      gallery = #{record.gallery,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      share_url = #{record.shareUrl,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      unit = #{record.unit,jdbcType=VARCHAR},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cskaoyanmall_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      gallery = #{record.gallery,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      share_url = #{record.shareUrl,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      unit = #{record.unit,jdbcType=VARCHAR},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.backstage.goodsbean.Goods">
    update cskaoyanmall_goods
    <set>
      <if test="goodsSn != null">
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="gallery != null">
        gallery = #{gallery,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="brief != null">
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="isOnSale != null">
        is_on_sale = #{isOnSale,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="shareUrl != null">
        share_url = #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=BIT},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="counterPrice != null">
        counter_price = #{counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        retail_price = #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cskaoyan.bean.backstage.goodsbean.Goods">
    update cskaoyanmall_goods
    set goods_sn = #{goodsSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      gallery = #{gallery,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      is_on_sale = #{isOnSale,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=SMALLINT},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      share_url = #{shareUrl,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      is_hot = #{isHot,jdbcType=BIT},
      unit = #{unit,jdbcType=VARCHAR},
      counter_price = #{counterPrice,jdbcType=DECIMAL},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.bean.backstage.goodsbean.Goods">
    update cskaoyanmall_goods
    set goods_sn = #{goodsSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      gallery = #{gallery,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      is_on_sale = #{isOnSale,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=SMALLINT},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      share_url = #{shareUrl,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      is_hot = #{isHot,jdbcType=BIT},
      unit = #{unit,jdbcType=VARCHAR},
      counter_price = #{counterPrice,jdbcType=DECIMAL},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectBrandList" resultType="com.cskaoyan.bean.backstage.goodsbean.catandbrand.BrandListBean">
    select id as value,name as label from cskaoyanmall_brand
  </select>

  <resultMap id="categoryListBeanMap" type="com.cskaoyan.bean.backstage.goodsbean.catandbrand.CategoryListBean">
    <result column="did" property="value"/>
    <result column="dname" property="label"/>
    <collection property="children" ofType="com.cskaoyan.bean.backstage.goodsbean.catandbrand.ChildrenBean">
      <result column="cid" property="value"/>
      <result column="cname" property="label"/>
    </collection>
  </resultMap>
  <select id="selectcategoryList" resultMap="categoryListBeanMap">
    select
  d.id as did, d.name as dname,
  c.id as cid, c.name as cname
  FROM
  cskaoyanmall_category d
  LEFT JOIN
  cskaoyanmall_category c
  on d.id = c.pid
  where d.pid = 0
	and d.deleted = false
  </select>

  <select id="selectCatdgoryIds" resultType="java.lang.Integer">


  </select>
  <select id="selectByCategoryId" resultType="com.cskaoyan.bean.wx.goods.GoodsVO">
    select id, name, brief, pic_url as picUrl, is_new as isNew, is_hot as isHot, counter_price as counterPrice, retail_price as retailPrice
    from cskaoyanmall_goods where category_id = #{categoryId} and is_on_sale = 1
  </select>
  <sql id="Base_Category_Column_List">
    id, name, keywords, `desc`, pid, icon_url as iconUrl, pic_url as picUrl, level, sort_order as sortOrder, add_time as addTime, update_time as updateTime,
    deleted
  </sql>
  <select id="selectFilterCategory" resultType="com.cskaoyan.bean.backstage.marketManagement.adminCategory.Category">
    select <include refid="Base_Category_Column_List"/>
    from cskaoyanmall_category where id != #{categoryId} and deleted = 0
  </select>

  <select id="selectAll" resultType="java.lang.Integer">
      select count(*) from cskaoyanmall_goods where is_on_sale = 1 and deleted = 0;
    </select>
  <select id="selectRelatedGoods" resultType="com.cskaoyan.bean.wx.goods.GoodsVO">
    select id, brief, counter_price as counterPrice, is_hot as isHot, is_new as isNew, name, pic_url as picUrl, retail_price as retailPrice
    from cskaoyanmall_goods where id != #{id} and
    category_id = (select category_id from cskaoyanmall_goods where id = #{id})
    and is_on_sale = 1 and deleted = 0
  </select>
  <resultMap id="selectGrouponMap" type="com.cskaoyan.bean.wx.goods.GrouponListVO">
    <result property="grouponPrice" column="groupon_price"/>
    <result property="grouponMember" column="discount_member"/>
    <association property="goods" column="goods_id" select="selectGrouponGoods"/>
  </resultMap>
  <select id="selectGrouponList" resultMap="selectGrouponMap">
    select goods_id, discount_member, (g.retail_price - gr.discount)
    as groupon_price from cskaoyanmall_groupon_rules gr
    left join cskaoyanmall_goods g on gr.goods_id = g.id where g.deleted = 0
    and g.is_on_sale = 1 and gr.deleted = 0
  </select>
  <select id="selectGrouponGoods" resultType="com.cskaoyan.bean.wx.goods.GoodsVO">
    select brief, counter_price as counterPrice, id, name, pic_url as picUrl,
    retail_price as retailPrice from cskaoyanmall_goods where id = #{id} and
    is_on_sale = 1 and deleted = 0
  </select>
  <select id="selectHotGoods" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cskaoyanmall_goods
    where is_on_sale = 1 and deleted = 0 and is_hot = 1
    limit 6
  </select>
  <select id="selectNewGoods" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cskaoyanmall_goods
    where is_on_sale = 1 and deleted = 0 and is_new = 1
    limit 6
  </select>

</mapper>